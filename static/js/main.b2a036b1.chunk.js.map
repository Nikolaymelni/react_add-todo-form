{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","allTodos","App","useState","setTodos","setTitle","hasTitleError","setTitleError","userSelect","setUserSelect","hasUserError","setUserError","action","method","onSubmit","event","preventDefault","newTodoId","Math","max","newTodo","Number","trim","htmlFor","type","placeholder","value","onChange","target","disabled","selected","userName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2a036b1.chunk.js","sourcesContent":["import { User } from '../Types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../Types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/Types/Todo';\nimport { User } from './components/Types/User';\n\nexport const findUserById = (userId: number): User | null => {\n  const foundUserById = usersFromServer.find(user => user.id === userId);\n\n  return foundUserById || null;\n};\n\nexport const allTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(allTodos);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [userSelect, setUserSelect] = useState(0);\n  const [hasUserError, setUserError] = useState(false);\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelect(Number(event.target.value));\n    setUserError(false);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleReset = () => {\n    setTitle('');\n    setUserSelect(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    if (!userSelect) {\n      setUserError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!title || !userSelect) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: newTodoId,\n      completed: false,\n      user: findUserById(Number(userSelect)),\n      title: title.trim(),\n      userId: Number(userSelect),\n    };\n\n    setTodos([...todos, newTodo]);\n    handleReset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={userSelect}\n            onChange={handleUserSelect}\n          >\n            <option\n              value=\"0\"\n              disabled\n              selected\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(userName => (\n              <option key={userName.id} value={userName.id}>\n                {userName.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}